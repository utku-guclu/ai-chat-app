version: '3.8'

services:
  # Database Layer
  db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpassword
      POSTGRES_DB: chatdb
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  # Message Broker Layer
  redis:
    image: redis:7-alpine
    container_name: redis_broker
    restart: always

  # Backend Layer
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: go_backend
    restart: always
    environment:
      DB_HOST: db
      DB_USER: chatuser
      DB_PASSWORD: chatpassword
      DB_NAME: chatdb
      REDIS_HOST: redis:6379
    depends_on:
      - db
      - redis

  # Frontend Layer
  frontend:
    image: node:20-alpine
    container_name: react_frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend

  # Edge Layer (Entry Point)
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

# Volumes for persistence
volumes:
  postgres_data:
